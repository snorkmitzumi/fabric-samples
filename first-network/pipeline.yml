resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: govc
  type: github-release
  source:
    user: vmware
    repository: govmomi
    access_token: {{github_token}}

  ## Uncomment the below snippet to only let the pipeline run between midnight and 1am central time.
  ## If a change is detected earlier the pipeline will start but be held up waiting for the time
  ## resource to become available.
  ## Also uncomment the fetching of the resource in the plan below.
  #- name: run-time-window
  #  type: time
  #  source:
  #    start: 12:00 AM
  #    stop: 1:00 AM
  #    location: America/Chicago
- name: tool-om
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: {{github_token}}

- name: tool-pivnet-cli
  type: github-release
  source:
    user: pivotal-cf
    repository: pivnet-cli
    access_token: {{github_token}}

- name: pcf-pipelines
  type: git
  source:
    uri: git@github.com:c0-ops/pcf-pipelines
    branch: master
    private_key: {{git_private_key}}

- name: pivnet-opsmgr
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: ops-manager
    sort_by: semver

jobs:
- name: upgrade-opsmgr
  plan:
  - aggregate:
## Uncomment to limit when the pipeline can run
#   - get: run-time-window
    - get: pcf-pipelines
    - get: govc
    - get: tool-om
      globs: om-linux
    - get: tool-pivnet-cli
      params:
        globs:
        - "pivnet-linux-amd64-*"
    - get: pivnet-opsmgr
      params:
        globs:
        - "*.ova"

  - aggregate:
    - task: export-opsmgr-settings
      file: pcf-pipelines/tasks/export-opsmgr-settings/task.yml
      params:
        OPSMAN_USERNAME: {{opsman_admin_username}}
        OPSMAN_PASSWORD: {{opsman_admin_password}}
        OPSMAN_URI: {{opsman_uri}}
        OPSMAN_SETTINGS_FILENAME: installation.zip
    - task: exported-opsmgr-diagnostic-report
      file: pcf-pipelines/tasks/export-opsmgr-diagnostic-report/task.yml
      params:
        OPSMAN_USERNAME: {{opsman_admin_username}}
        OPSMAN_PASSWORD: {{opsman_admin_password}}
        OPSMAN_URI: {{opsman_uri}}

  - task: deploy-opsman-vm
    file: pcf-pipelines/tasks/deploy-opsman-vm/task.yml
    params:
      OPSMAN_TIMEOUT: {{opsman_timeout_seconds}}
      GOVC_USERNAME: {{vcenter_username}}
      GOVC_PASSWORD: {{vcenter_password}}
      GOVC_DATACENTER: {{vcenter_datacenter}}
      GOVC_CLUSTER: {{vcenter_cluster}}
      GOVC_RESOURCE_POOL: {{vcenter_resource_pool}}
      GOVC_DATASTORE: {{vcenter_datastore}}
      GOVC_URL: {{vcenter_url}}
      OPSMAN_IP: {{opsman_ip}}
      NETMASK: {{netmask}}
      GATEWAY: {{gateway}}
      DNS: {{dns}}
      NTP: {{ntp}}
      OPSMAN_NETWORK: {{opsman_network}}
      OPSMAN_VM_FOLDER: {{opsman_vm_folder}}
      OPSMAN_ADMIN_PASSWORD: {{opsman_admin_password}}

  - task: import-opsmgr
    file: pcf-pipelines/tasks/import-opsmgr-settings/task.yml
    params:
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_PASSPHRASE: {{opsman_passphrase}}
      OPSMAN_URI: {{opsman_uri}}
      OPSMAN_SETTINGS_FILENAME: installation.zip

  - task: download-stemcells
    file: pcf-pipelines/tasks/download-pivnet-stemcells/task.yml
    params:
      API_TOKEN: {{pivnet_token}}
      IAAS_TYPE: {{iaas_type}}

  - task: restore-stemcells
    file: pcf-pipelines/tasks/restore-stemcells/task.yml
    params:
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_URI: {{opsman_uri}}

      # todo discuss the order for calling this task
  - task: apply-changes
    file: pcf-pipelines/tasks/apply-changes/task.yml
    params:
      OPSMAN_USERNAME: {{opsman_admin_username}}
      OPSMAN_PASSWORD: {{opsman_admin_password}}
      OPSMAN_URI: {{opsman_uri}}
      OPSMAN_TIMEOUT: {{opsman_timeout}}
